{"version":3,"sources":["App/AppProvider.js","App/AppLayout.js","App/AppBar.js","Shared/Styles.js","Shared/Tile.js","Shared/GridAlignment.js","Settings/CoinHeaderGrid.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Shared/Page.js","Dashboard/index.js","Shared/Content.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/ConfirmButton.js","Settings/Search.js","Settings/Welcome.js","Settings/index.js","App/index.js","serviceWorker.js","index.js"],"names":["cc","require","AppContext","createContext","AppProvider","props","state","page","favorites","savedSettings","setPage","bind","confirmFavorites","addCoin","removeCoin","isInFavorites","setFilteredCoins","setCurrentFavorite","this","_fetchCoins","_fetchPrices","Provider","value","children","cryptoDashData","JSON","parse","window","localStorage","getItem","currentFavorite","firstVisit","setState","setItem","stringify","key","length","push","_","pull","includes","filteredCoins","symbol","coinList","Data","_prices","prices","data","item","priceFull","console","warn","Component","styled","div","Logo","Bar","ControlButttonEl","active","css","ControlButton","name","Consumer","text","onClick","charAt","toUpperCase","substr","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","Tile","SelectableTile","DeletableTile","DisabledTile","LeftSelf","RightSelf","CoinHeaderGrid","DeleteIcon","topSection","numberFormat","number","slice","PriceTileStyled","compact","TickerPrice","ChangePercentStyled","red","ChangePercent","CHANGEPCT24HOUR","PriceTileCompact","PRICE","PriceTile","price","index","Object","keys","PriceGrid","filter","map","Page","coin","style","loading","height","src","ImageUrl","alt","CoinSymbol","coinHandler","coinKey","CoinName","Symbol","CoinImage","width","CoinGridStyled","list","getCoins","idx","CoinTile","ConfirmButton","CenterDiv","SearchGrid","SearchInput","input","handleFilter","debounce","symbols","names","stringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","onKeyUp","e","target","filterCoins","Welcome","CoinGrid","Search","App","AppLayout","AppBar","Content","Dashboard","Settings","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75b3670f.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst cc = require('cryptocompare');\r\nconst MAX_FAVORITES = 20;\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport class AppProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      page: 'dashboard',\r\n      favorites: ['BTC', 'XRP', 'BCH', 'ETN', 'LTC'],\r\n      ...this.savedSettings(),\r\n\r\n      setPage: this.setPage.bind(this),\r\n      confirmFavorites: this.confirmFavorites.bind(this),\r\n      addCoin: this.addCoin.bind(this),\r\n      removeCoin: this.removeCoin.bind(this),\r\n      isInFavorites: this.isInFavorites.bind(this),\r\n      setFilteredCoins: this.setFilteredCoins.bind(this),\r\n      setCurrentFavorite: this.setCurrentFavorite.bind(this)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._fetchCoins();\r\n    this._fetchPrices();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n\r\n  savedSettings() {\r\n    const cryptoDashData = JSON.parse(window.localStorage.getItem('cryptoDash'));\r\n\r\n    if (!cryptoDashData || !cryptoDashData.favorites) {\r\n      return { page: 'settings', firstVisit: true };\r\n    }\r\n\r\n    const { favorites, currentFavorite } = cryptoDashData;\r\n    return { favorites, currentFavorite };\r\n  }\r\n\r\n  confirmFavorites() {\r\n    const currentFavorite = this.state.favorites[0];\r\n\r\n    this.setState({ firstVisit: false, page: 'dashboard', currentFavorite }, this._fetchPrices.bind(this));\r\n\r\n    window.localStorage.setItem('cryptoDash', JSON.stringify({ favorites: this.state.favorites, currentFavorite }));\r\n  }\r\n\r\n  setPage(page) {\r\n    this.setState({ page });\r\n  }\r\n\r\n  addCoin(key) {\r\n    const favorites = [...this.state.favorites];\r\n\r\n    if (favorites.length < MAX_FAVORITES) {\r\n      favorites.push(key);\r\n      this.setState({ favorites });\r\n    }\r\n  }\r\n\r\n  removeCoin(key) {\r\n    const favorites = [...this.state.favorites];\r\n\r\n    this.setState({ favorites: _.pull(favorites, key) });\r\n  }\r\n\r\n  isInFavorites(key) {\r\n    return _.includes(this.state.favorites, key);\r\n  }\r\n\r\n  setFilteredCoins(filteredCoins) {\r\n    this.setState({ filteredCoins });\r\n  }\r\n\r\n  setCurrentFavorite(symbol) {\r\n    this.setState({ currentFavorite: symbol });\r\n\r\n    window.localStorage.setItem('cryptoDash', JSON.stringify({\r\n      ...JSON.parse(window.localStorage.getItem('cryptoDash')), currentFavorite: symbol\r\n    }))\r\n  }\r\n\r\n  async _fetchCoins() {\r\n    this.setState({ coinList: (await cc.coinList()).Data });\r\n  }\r\n\r\n  async _fetchPrices() {\r\n    this.setState({ prices: await this._prices() });\r\n  }\r\n\r\n  async _prices() {\r\n    const data = [];\r\n\r\n    for (const item of this.state.favorites) {\r\n      try {\r\n        data.push(await cc.priceFull(item, 'USD'));\r\n      } catch (e) {\r\n        console.warn(e);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n  padding: 40px;\r\n`;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { AppContext } from './AppProvider';\r\n\r\nconst Logo = styled.div`\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 180px auto 100px 100px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ControlButttonEl = styled.div`\r\n  cursor: pointer;\r\n\r\n  ${props => props.active && css`\r\n    text-shadow: 0px 0px 60px #03ff03;\r\n  `}\r\n`;\r\n\r\nfunction toTitleCase(text) {\r\n  return text.charAt(0).toUpperCase() + text.substr(1);\r\n}\r\n\r\nfunction ControlButton({ name }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ page, setPage }) => (\r\n        <ControlButttonEl active={page === name} onClick={() => setPage(name)}>\r\n          { toTitleCase(name) }\r\n        </ControlButttonEl>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Bar>\r\n      <Logo>CryptoDash</Logo>\r\n      <div />\r\n      <ControlButton active name=\"dashboard\" />\r\n      <ControlButton name=\"settings\" />\r\n    </Bar>\r\n  );\r\n};\r\n","const theme = 'dark';\r\n//const theme = 'light';\r\nexport const lightTheme = theme === 'light';\r\n\r\nexport const color = lightTheme ? 'white' : '#061a44';\r\nexport const color2 = lightTheme ? 'white' : '#010e2c';\r\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\r\n\r\nif (lightTheme) {\r\n  document.body.style.background = '#e1eaee';\r\n  document.body.style.color = '#061a44';\r\n}\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`;\r\nexport const backgroundColor2 = `background-color: ${color2};`;\r\nexport const greenBackgroundColor = `background-color: ${color3};`;\r\n\r\nexport const fontColorGreen = `color: #03A9F4`;\r\nexport const fontColorWhite = `color: white`;\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\r\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\r\n\r\nexport const fontSizeBig = 'font-size: 2em';\r\nexport const fontSize1 = 'font-size: 1.5em;';\r\nexport const fontSize2 = 'font-size: 1.0em';\r\nexport const fontSize3 = 'font-size: .75em';\r\n\r\nexport const textAlignCenter = 'text-align: center;';\r\n","import styled from 'styled-components';\r\n\r\nimport { subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow } from './Styles';\r\n\r\nexport const Tile = styled.div`\r\n  ${lightBlueBackground}\r\n  ${subtleBoxShadow}\r\n  padding: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SelectableTile = styled(Tile)`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${greenBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const DeletableTile = styled(SelectableTile)`\r\n  &:hover {\r\n    ${redBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const DisabledTile = styled(Tile)`\r\n  cursor: not-allowed;\r\n  opacity: .4;\r\n  pointer-events: none;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const LeftSelf = styled.div`\r\n  justify-self: left;\r\n`;\r\n\r\nexport const RightSelf = styled.div`\r\n  justify-self: right;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { DeletableTile } from '../Shared/Tile';\r\nimport { LeftSelf, RightSelf } from '../Shared/GridAlignment';\r\n\r\nexport const CoinHeaderGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1.5fr 0.5fr;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DeleteIcon = styled(RightSelf)`\r\n  display: none;\r\n\r\n  ${DeletableTile}:hover & {\r\n    color: red;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default function({ name, symbol, topSection }) {\r\n  return (\r\n    <CoinHeaderGrid>\r\n      <LeftSelf>{name}</LeftSelf>\r\n      {topSection ? (\r\n        <DeleteIcon>X</DeleteIcon>\r\n      ) : (\r\n        <RightSelf>{symbol}</RightSelf>\r\n      )}\r\n    </CoinHeaderGrid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { AppContext } from './../App/AppProvider';\r\n\r\nimport { SelectableTile } from './../Shared/Tile';\r\nimport { LeftSelf, RightSelf } from './../Shared/GridAlignment';\r\nimport { CoinHeaderGrid } from './../Settings/CoinHeaderGrid';\r\n\r\nimport { fontSize3, fontSizeBig, greenBoxShadow } from './../Shared/Styles';\r\n\r\nconst numberFormat = number => +(number + '').slice(0, 7);\r\n\r\nconst PriceTileStyled = styled(SelectableTile)`\r\n  ${props => props.compact && css `\r\n    ${fontSize3}\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n  `}\r\n\r\n  ${props => props.currentFavorite && css `\r\n    ${greenBoxShadow}\r\n    pointer-events: none;\r\n  `}\r\n`;\r\n\r\nconst TickerPrice = styled.div`\r\n  ${fontSizeBig}\r\n`;\r\n\r\nconst ChangePercentStyled = styled.div`\r\n  color: green;\r\n\r\n  ${props => props.red && css`\r\n    color: red;\r\n  `}\r\n`;\r\n\r\nfunction ChangePercent({ data }) {\r\n  return (\r\n    <RightSelf>\r\n      <ChangePercentStyled red={data.CHANGEPCT24HOUR < 0}>\r\n        {numberFormat(data.CHANGEPCT24HOUR)}\r\n      </ChangePercentStyled>\r\n    </RightSelf>\r\n  );\r\n}\r\n\r\nfunction PriceTileCompact({ symbol, data, currentFavorite, setCurrentFavorite }) {\r\n  return (\r\n    <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>\r\n      <LeftSelf>\r\n        <div>{symbol}</div>\r\n        <ChangePercent data={data}/>\r\n      </LeftSelf>\r\n      <TickerPrice>\r\n        <div>\r\n          ${numberFormat(data.PRICE)}\r\n        </div>\r\n      </TickerPrice>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nfunction PriceTile({ symbol, data, currentFavorite, setCurrentFavorite }) {\r\n  return (\r\n    <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\r\n      <CoinHeaderGrid>\r\n        <LeftSelf>{symbol}</LeftSelf>\r\n        <ChangePercent data={data}/>\r\n      </CoinHeaderGrid>\r\n      <TickerPrice>\r\n        ${numberFormat(data.PRICE)}\r\n      </TickerPrice>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nexport default function({ price, index }) {\r\n  const symbol = Object.keys(price)[0];\r\n  const data = price[symbol]['USD'];\r\n  const Tile = index < 10 ? PriceTile : PriceTileCompact;\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ currentFavorite, setCurrentFavorite }) => (\r\n        <Tile\r\n          symbol={symbol}\r\n          data={data}\r\n          compact={index >= 5}\r\n          currentFavorite={currentFavorite === symbol}\r\n          setCurrentFavorite={setCurrentFavorite.bind(null, symbol)}\r\n        />\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from './../App/AppProvider';\r\nimport PriceTile from './PriceTile';\r\n\r\nconst PriceGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ prices }) => (\r\n        <PriceGrid>\r\n          {prices\r\n            .filter(price => {\r\n              const symbol = Object.keys(price)[0];\r\n              return price[symbol] && price[symbol]['USD'];\r\n            })\r\n            .map((price, index) => (\r\n              <PriceTile key={index} price={price} index={index}/>)\r\n            )}\r\n        </PriceGrid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { AppContext } from './../App/AppProvider';\r\n\r\nexport default function({ name, children }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ page }) => page !== name ? null : <div>{children}</div> }\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport PriceGrid from './PriceGrid';\r\nimport Page from './../Shared/Page';\r\n\r\nexport default function() {\r\n  return (\r\n    <Page name=\"dashboard\">\r\n      <PriceGrid/>\r\n    </Page>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { AppContext } from './../App/AppProvider';\r\n\r\nexport default function(props) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, prices, firstVisit }) => {\r\n        if (!coinList) {\r\n          return <div>Loading Coins</div>\r\n        }\r\n        if (!firstVisit && !prices) {\r\n          return <div>Loading Prices</div>\r\n        }\r\n        return <div>{props.children}</div>\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function({ coin, style }) {\r\n  return (\r\n    <img\r\n      loading=\"lazy\"\r\n      style={style || { height: '50px' }}\r\n      src={`http://cryptocompare.com/${coin.ImageUrl}`}\r\n      alt={coin.CoinSymbol}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppContext } from './../App/AppProvider';\r\n\r\nimport { SelectableTile, DisabledTile, DeletableTile } from '../Shared/Tile';\r\nimport CoinImage from './../Shared/CoinImage';\r\nimport CoinHeaderGrid from './CoinHeaderGrid';\r\n\r\nconst coinHandler = (topSection, key, addCoin, removeCoin) => topSection ? removeCoin(key) : addCoin(key);\r\n\r\nexport default function({ coinKey, topSection }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, addCoin, removeCoin, isInFavorites }) => {\r\n        const Tile = !topSection && isInFavorites(coinKey) ? DisabledTile : (topSection ? DeletableTile : SelectableTile);\r\n        const coin = coinList[coinKey];\r\n\r\n        return (\r\n          <Tile onClick={coinHandler.bind(null, topSection, coinKey, addCoin, removeCoin)}>\r\n            <CoinHeaderGrid name={coin.CoinName} symbol={coin.Symbol} topSection={topSection}/>\r\n            <CoinImage coin={coin} style={ { width: '80%' } }/>\r\n          </Tile>\r\n        )\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppContext } from './../App/AppProvider';\r\nimport CoinTile from './CoinTile';\r\n\r\nconst CoinGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  grid-gap: 15px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nfunction getCoins(list, topSection, favorites, filteredCoins) {\r\n  return topSection ? favorites : filteredCoins ? Object.keys(filteredCoins) : Object.keys(list).slice(0, 150);\r\n}\r\n\r\nexport default function({ topSection }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, favorites, filteredCoins }) => (\r\n        <CoinGridStyled>\r\n          {getCoins(coinList, topSection, favorites, filteredCoins).map((coinKey, idx) => (\r\n            <CoinTile key={idx} coinKey={coinKey} topSection={topSection}/>\r\n          ))}\r\n        </CoinGridStyled>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppContext } from '../App/AppProvider';\r\nimport { fontSize1, greenBoxShadow, color3 } from './../Shared/Styles';\r\n\r\nconst ConfirmButton = styled.div`\r\n  color: ${color3};\r\n  ${fontSize1}\r\n  cursor: pointer;\r\n  margin: 20px;\r\n  padding: 5px;\r\n    &:hover {\r\n      ${greenBoxShadow}\r\n    }\r\n`;\r\n\r\nconst CenterDiv = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ confirmFavorites }) =>\r\n        <CenterDiv>\r\n          <ConfirmButton onClick={confirmFavorites}>\r\n            Confirm Favorites\r\n          </ConfirmButton>\r\n        </CenterDiv>\r\n      }\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport fuzzy from 'fuzzy';\r\nimport _ from 'lodash';\r\n\r\nimport { AppContext } from './../App/AppProvider';\r\n\r\nimport { backgroundColor2, fontSize2 } from './../Shared/Styles';\r\n\r\nconst SearchGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 150px 1fr;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  ${backgroundColor2}\r\n  ${fontSize2}\r\n  border: 1px solid;\r\n  color: #1153c9;\r\n  height: 20px;\r\n  padding: 5px;\r\n  place-self: center left;\r\n`;\r\n\r\nconst handleFilter = _.debounce((value, setFilteredCoins, coinList) => {\r\n  if (!value) { return setFilteredCoins(null); }\r\n\r\n  const symbols = Object.keys(coinList);\r\n  const names = symbols.map(symbol => coinList[symbol].CoinName);\r\n  const stringsToSearch = symbols.concat(names);\r\n  const fuzzyResults = fuzzy.filter(value, stringsToSearch, {}).map(result => result.string);\r\n\r\n  setFilteredCoins(_.pickBy(coinList, (result, symKey) => _.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, result.CoinName)));\r\n}, 500);\r\n\r\nconst filterCoins = (e , setFilteredCoins, coinList) => handleFilter(e.target.value, setFilteredCoins, coinList);\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setFilteredCoins, coinList }) =>\r\n        <SearchGrid>\r\n          <h3>Search coins:</h3>\r\n          <SearchInput onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}/>\r\n        </SearchGrid>\r\n      }\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ firstVisit }) =>\r\n        firstVisit ? <div>\r\n          Welcome to CryptoDash, please select your favorite coins to begin.\r\n        </div> : null\r\n      }\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport CoinGrid from './CoinGrid';\r\nimport ConfirmButton from './ConfirmButton';\r\nimport Page from './../Shared/Page';\r\nimport Search from './Search';\r\nimport Welcome from './Welcome';\r\n\r\nexport default function() {\r\n  return (\r\n    <Page name=\"settings\">\r\n      <Welcome/>\r\n      <CoinGrid topSection/>\r\n      <ConfirmButton/>\r\n      <Search/>\r\n      <CoinGrid/>\r\n    </Page>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { AppProvider } from './AppProvider';\r\nimport AppLayout from './AppLayout';\r\nimport AppBar from './AppBar';\r\nimport Dashboard from './../Dashboard';\r\nimport Content from './../Shared/Content';\r\nimport Settings from '../Settings';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <AppLayout>\r\n        <AppProvider>\r\n          <AppBar/>\r\n          <Content>\r\n            <Dashboard/>\r\n            <Settings/>\r\n          </Content>\r\n        </AppProvider>\r\n      </AppLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}